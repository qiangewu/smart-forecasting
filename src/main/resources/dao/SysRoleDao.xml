<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touchspring.smartforecasting.dao.SysRoleDao">
  <resultMap id="BaseResultMap" type="com.touchspring.smartforecasting.domain.entity.sys.SysRole">
    <id column="id" property="id" />
    <result column="create_at" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="name" property="name" />
    <result column="is_deleted" property="isDeleted" />
    <result column="description" property="description" />
    <result column="is_active" property="isActive" />
  </resultMap>

  <sql id="Base_Column_List">
    id, create_at, update_at, create_user_id, update_user_id, name, is_deleted, description,
    is_active
  </sql>
  <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR} and is_deleted = 0
  </select>

  <select id="findAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where is_deleted = 0
  </select>
  <select id="findByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where is_deleted = 0 and name = #{name}
  </select>

    <select id="selectPage" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from sys_role
      where is_deleted = 0
    </select>

    <update id="deleteById" parameterType="java.lang.String">
    update sys_role set is_deleted = 1
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.touchspring.smartforecasting.domain.entity.sys.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.touchspring.smartforecasting.domain.entity.sys.SysRole">
    update sys_role
    <set>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>